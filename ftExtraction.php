<?php

/// MySQL DB name
$db_name = "peanalysis";
///MySQL DB user
$db_user = "peanalysis";
///MySQL DB password
$db_password = "peanalys";
///MySQL server address
$db_host = "localhost";


//Make MySQL Conntection
if (mysql_connect($db_host, $db_user, $db_password) === FALSE)
    $this->output .= "Cannot Create Connection to DB<br>";
if (mysql_select_db($db_name) === FALSE)
    $this->output .= "Cannot Select the Table into DB<br>";


//Path to the storage with results (names as md5)
$dir = 'multinomial/results';
chdir($dir);
$dirs = array_filter(glob('*'), 'is_dir');
print_r($dirs);
$name = "";

//READ ALL CATEGORIES
foreach ($dirs as $category) {
    echo $category . "\n";
    $allCats = scandir($category);
    //Remove two folders
    $categories = array_diff($allCats, array('.', '..'));
    //go through each file in a directory
    //READ ALL LABELS
    foreach ($categories as $labels) {
        //echo $files."\n";
        $allFiles = scandir($category . "/" . $labels);
        //Remove two folders
        $files = array_diff($allFiles, array('.', '..'));
        //go through each file in a directory
        printf(sizeof($files));
        //READ ALL FILES
        foreach ($files as $fileName) {
            echo $dir . "/" . $category . "/" . $labels . "/" . $fileName . "\n";

            shell_exec("rm " . $dir . "/" . $category . "/" . $labels . "/" . $fileName . "/CaptureBat_filtered.csv");
            $file = file($dir . "/" . $category . "/" . $labels . "/" . $fileName . "/CaptureBat.log");
            //Delete specific lines that includes excess logs
            foreach ($file as $key => $line) {
                if (false !== strpos($line, 'SearchIndexer.exe')) {
                    unset($file[$key]);
                }
            }

            file_put_contents($dir . "/" . $category . "/" . $labels . "/" . $fileName . "/CaptureBat_filtered.csv", $file);

            //Read CSV content
            $csv = array();
            $file = fopen($dir . "/" . $category . "/" . $labels . "/" . $fileName . "/CaptureBat_filtered.csv", 'r');
            while (($line = fgetcsv($file)) !== FALSE) {
                //$line is an array of the csv elements
                $csv[] = $line;
            }
            fclose($file);

            //PROCESS LOG FILES & FORM SQL QUERY
            //disk features
            file_exists($dir . "/" . $category . "/" . $labels . "/" . $fileName . "/" . $fileName . ".exe") ? $file_exists = 1 : $file_exists = 0;

            $memory_processCreated = 0;
            $memory_processTerminated = 0;

            $disk_numberRecords = count($csv);
            $disk_fileWrite = 0;
            $disk_fileDelete = 0;
            $disk_registrySetValueKey = 0;
            $disk_registryDeleteValueKey = 0;
            $disk_registryHKLM = 0;
            $disk_registryHKCU = 0;

            $disk_registryHKCR = 0;
            $disk_registryHKU = 0;
            $disk_registryHKLM_SAM = 0;
            $disk_registryHKLM_SECURITY = 0;
            $disk_registryHKLM_SYSTEM = 0;
            $disk_registryHKLM_SOFTWARE = 0;

            $disk_fileNamePresent = 0;

            $malware_memory_processCreated = 0;
            $malware_memory_processTerminated = 0;

            $malware_disk_fileWrite = 0;
            $malware_disk_fileDelete = 0;
            $malware_disk_registrySetValueKey = 0;
            $malware_disk_registryDeleteValueKey = 0;
            $malware_disk_registryHKLM = 0;
            $malware_disk_registryHKCU = 0;

            $malware_disk_registryHKCR = 0;
            $malware_disk_registryHKU = 0;
            $malware_disk_registryHKLM_SAM = 0;
            $malware_disk_registryHKLM_SECURITY = 0;
            $malware_disk_registryHKLM_SYSTEM = 0;
            $malware_disk_registryHKLM_SOFTWARE = 0;


            foreach ($csv as $key => $line) {
                if ($line[1] == 'process' && $line[2] == 'created')
                    $memory_processCreated++;
                if ($line[1] == 'process' && $line[2] == 'terminated')
                    $memory_processTerminated++;
                if ($line[1] == 'file' && $line[2] == 'Write')
                    $disk_fileWrite++;
                if ($line[1] == 'file' && $line[2] == 'Delete')
                    $disk_fileDelete++;
                if ($line[1] == 'registry' && $line[2] == 'SetValueKey')
                    $disk_registrySetValueKey++;
                if ($line[1] == 'registry' && $line[2] == 'DeleteValueKey')
                    $disk_registryDeleteValueKey++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM')) {
                    $disk_registryHKLM++;
                }
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKCU'))
                    $disk_registryHKCU++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKCR'))
                    $disk_registryHKCR++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKU'))
                    $disk_registryHKU++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SAM'))
                    $disk_registryHKLM_SAM++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SECURITY'))
                    $disk_registryHKLM_SECURITY++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SYSTEM'))
                    $disk_registryHKLM_SYSTEM++;
                if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SOFTWARE'))
                    $disk_registryHKLM_SOFTWARE++;

                foreach ($line as $element) {
                    if (strpos($element, $fileName) !== FALSE) {
                        $disk_fileNamePresent++;
                    }
                }
                if ($disk_fileNamePresent != 0) {
                    if ($line[1] == 'process' && $line[2] == 'created')
                        $malware_memory_processCreated++;
                    if ($line[1] == 'process' && $line[2] == 'terminated')
                        $malware_memory_processTerminated++;
                    if ($line[1] == 'file' && $line[2] == 'Write')
                        $malware_disk_fileWrite++;
                    if ($line[1] == 'file' && $line[2] == 'Delete')
                        $malware_disk_fileDelete++;
                    if ($line[1] == 'registry' && $line[2] == 'SetValueKey')
                        $malware_disk_registrySetValueKey++;
                    if ($line[1] == 'registry' && $line[2] == 'DeleteValueKey')
                        $malware_disk_registryDeleteValueKey++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM'))
                        $malware_disk_registryHKLM++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKCU'))
                        $malware_disk_registryHKCU++;

                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKCU'))
                        $malware_disk_registryHKCU++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKCR'))
                        $malware_disk_registryHKCR++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKU'))
                        $malware_disk_registryHKU++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SAM'))
                        $malware_disk_registryHKLM_SAM++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SECURITY'))
                        $malware_disk_registryHKLM_SECURITY++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SYSTEM'))
                        $malware_disk_registryHKLM_SYSTEM++;
                    if ($line[1] == 'registry' && false !== strpos($line[4], 'HKLM\SOFTWARE'))
                        $malware_disk_registryHKLM_SOFTWARE++;
                }
            }

            //network features
            $network_fileSize = 0;
            $network_numPackets = 0;
            $network_dataSize = 0;
            $network_dataRate = 0;
            $network_avgPacketSize = 0;
            $network_avgPacketRate = 0;
            $network_uniqueProtocols = 0;
            $network_uniquePacketSizes = 0;
            $network_uniqueIPs = 0;
            $network_udp = 0;
            $network_tcp = 0;
            $network_icmp = 0;
            $network_http = 0;
            $network_httpGET = 0;
            $network_httpGETexe = 0;
            $network_httpGETtxt = 0;
            $network_httpGETphp = 0;
            $network_httpGETjpg = 0;

            $path = $dir . "/" . $category . "/" . $labels . "/" . $fileName . "/";
            shell_exec("rm " . $path . "logs/10.0.2.15.pcap");
            $zipName = shell_exec("ls " . $path . " | grep capture_");
            $zipName = str_replace(PHP_EOL, '', $zipName);
            //!!check if empty, e.g. exists!
            if (strlen($zipName) > 1) {
                //echo "\n"."unzip ".$path.$zipName." 'logs/10.0.2.15.pcap' -d ".$path."\n";
                shell_exec("unzip " . $path . $zipName . " 'logs/10.0.2.15.pcap' -d " . $path);
                //unzip <target-zip-file> '<folder-to-extract/*>' -d <destination-path> 
                //"logs/10.0.2.15.pcap"

                $network_fileSize = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'File size'| tr -d ' ' | cut -d ':' -f 2"));

                $network_numPackets = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'Number of packets'| tr -d ' ' | cut -d ':' -f 2"));

                $network_dataSize = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'Data size'| tr -d ' ' | cut -d ':' -f 2"));

                $network_dataRate = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'Data byte rate'| tr -d ' ' | cut -d ':' -f 2"));

                $network_avgPacketSize = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'Average packet size'| tr -d ' ' | cut -d ':' -f 2"));

                $network_avgPacketRate = intval(shell_exec("capinfos " . $path . "logs/10.0.2.15.pcap | grep 'Average packet rate'| tr -d ' ' | cut -d ':' -f 2"));

                $network_uniqueProtocols = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -z io,phs -q | tr -s ' ' | cut -f 2 -d ' ' | tail -n +7 | head -n -1 | wc -l"));

                $network_uniquePacketSizes = intval(shell_exec("tshark -nr  " . $path . "logs/10.0.2.15.pcap -T fields -e frame.len | sort -n | uniq -c | wc -l"));

                $network_uniqueIPs = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -Y tcp -T fields -e ip.src | sort | uniq -c"));

                $network_udp = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e frame.number -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -E header=y -E separator=, -E quote=d -E occurrence=f | grep ',\"17\"' | wc -l"));

                $network_tcp = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e frame.number -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -E header=y -E separator=, -E quote=d -E occurrence=f | grep ',\"6\"' | wc -l"));

                $network_icmp = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e frame.number -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -E header=y -E separator=, -E quote=d -E occurrence=f | grep ',\"1\"' | wc -l"));

                $network_http = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap tcp.dstport==80"));

                $network_httpGET = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e http.request.method -e http.request.uri -e http.host | grep GET | grep -v \"microsoft.com\|windowsupdate.com\" | wc -l"));

                $network_httpGETexe = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e http.request.method -e http.request.uri -e http.host | grep GET | grep -v \"microsoft.com\|windowsupdate.com\" | grep exe | wc -l"));

                $network_httpGETtxt = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e http.request.method -e http.request.uri -e http.host | grep GET | grep -v \"microsoft.com\|windowsupdate.com\" | grep txt | wc -l"));

                $network_httpGETphp = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e http.request.method -e http.request.uri -e http.host | grep GET | grep -v \"microsoft.com\|windowsupdate.com\" | grep php | wc -l"));

                $network_httpGETjpg = intval(shell_exec("tshark -r " . $path . "logs/10.0.2.15.pcap -T fields -e http.request.method -e http.request.uri -e http.host | grep GET | grep -v \"microsoft.com\|windowsupdate.com\" | grep jpg | wc -l"));
            }


            //form query
            $query = "INSERT INTO `behavioural`
        (`md5`, `file_exists`, 
`memory_processCreated`, 
`memory_processTerminated`, 
`disk_numberRecords`, 
`disk_fileWrite`, 
`disk_fileDelete`, 
`disk_registrySetValueKey`, 
`disk_registryDeleteValueKey`, 
`disk_registryHKLM`, 
`disk_registryHKCU`, 
`disk_registryHKCR`,
`disk_registryHKU`,
`disk_registryHKLM_SAM`,
`disk_registryHKLM_SECURITY`,
`disk_registryHKLM_SYSTEM`,
`disk_registryHKLM_SOFTWARE`,
`disk_fileNamePresent`, 
`malware_memory_processCreated`, 
`malware_memory_processTerminated`, 
`malware_disk_fileWrite`, 
`malware_disk_fileDelete`, 
`malware_disk_registrySetValueKey`,
`malware_disk_registryDeleteValueKey`, 
`malware_disk_registryHKLM`, 
`malware_disk_registryHKCU`,
`malware_disk_registryHKCR`,
`malware_disk_registryHKU`,
`malware_disk_registryHKLM_SAM`,
`malware_disk_registryHKLM_SECURITY`,
`malware_disk_registryHKLM_SYSTEM`,
`malware_disk_registryHKLM_SOFTWARE`,
`network_fileSize`,
`network_numPackets`,
`network_dataSize`,
`network_dataRate`,
`network_avgPacketSize`,
`network_avgPacketRate`,
`network_uniqueProtocols`,
`network_uniquePacketSizes`,
`network_uniqueIPs`,
`network_udp`,
`network_tcp`,
`network_icmp`,
`network_http`,
`network_httpGET`,
`network_httpGETexe`,
`network_httpGETtxt`,
`network_httpGETphp`,
`network_httpGETjpg`,
`category`,
`class`)
        VALUES (
        UNHEX('" . $fileName . "'),
	'" . $file_exists . "',
	'" . $memory_processCreated . "',
	'" . $memory_processTerminated . "',
	'" . $disk_numberRecords . "',
	'" . $disk_fileWrite . "',
	'" . $disk_fileDelete . "',
	'" . $disk_registrySetValueKey . "',
	'" . $disk_registryDeleteValueKey . "',
	'" . $disk_registryHKLM . "',
	'" . $disk_registryHKCU . "',
	'" . $disk_registryHKCR . "',
	'" . $disk_registryHKU . "',
	'" . $disk_registryHKLM_SAM . "',
	'" . $disk_registryHKLM_SECURITY . "',
	'" . $disk_registryHKLM_SYSTEM . "',
	'" . $disk_registryHKLM_SOFTWARE . "',
	'" . $disk_fileNamePresent . "',
	'" . $malware_memory_processCreated . "',
	'" . $malware_memory_processTerminated . "',
	'" . $malware_disk_fileWrite . "',
	'" . $malware_disk_fileDelete . "',
	'" . $malware_disk_registrySetValueKey . "',
	'" . $malware_disk_registryDeleteValueKey . "',
	'" . $malware_disk_registryHKLM . "',
	'" . $malware_disk_registryHKCU . "',
	'" . $malware_disk_registryHKCR . "',
	'" . $malware_disk_registryHKU . "',
	'" . $malware_disk_registryHKLM_SAM . "',
	'" . $malware_disk_registryHKLM_SECURITY . "',
	'" . $malware_disk_registryHKLM_SYSTEM . "',
	'" . $malware_disk_registryHKLM_SOFTWARE . "',
    	'" . $network_fileSize . "',
	'" . $network_numPackets . "',
	'" . $network_dataSize . "',
	'" . $network_dataRate . "',
	'" . $network_avgPacketSize . "',
	'" . $network_avgPacketRate . "',
	'" . $network_uniqueProtocols . "',
    	'" . $network_uniquePacketSizes . "',
	'" . $network_uniqueIPs . "',
	'" . $network_udp . "',
	'" . $network_tcp . "',
	'" . $network_icmp . "',
	'" . $network_http . "',
	'" . $network_httpGET . "',
	'" . $network_httpGETexe . "',
	'" . $network_httpGETtxt . "',
	'" . $network_httpGETphp . "',
	'" . $network_httpGETjpg . "',
	'" . $category . "',
	'" . $labels . "')
       ON DUPLICATE KEY
	UPDATE
	`file_exists`='" . $file_exists . "',
	`memory_processCreated`='" . $memory_processCreated . "',
	`memory_processTerminated`='" . $memory_processTerminated . "',
	`disk_numberRecords`='" . $disk_numberRecords . "',
	`disk_fileWrite`='" . $disk_fileWrite . "',
	`disk_fileDelete`='" . $disk_fileDelete . "',
	`disk_registrySetValueKey`='" . $disk_registrySetValueKey . "',
	`disk_registryDeleteValueKey`='" . $disk_registryDeleteValueKey . "',
	`disk_registryHKLM`='" . $disk_registryHKLM . "',
	`disk_registryHKCU`='" . $disk_registryHKCU . "',
	`disk_registryHKCR`='" . $disk_registryHKCR . "',
	`disk_registryHKU`='" . $disk_registryHKU . "',
        `disk_registryHKLM_SAM`='" . $disk_registryHKLM_SAM . "',
	`disk_registryHKLM_SECURITY`='" . $disk_registryHKLM_SECURITY . "',
	`disk_registryHKLM_SYSTEM`='" . $disk_registryHKLM_SYSTEM . "',
	`disk_registryHKLM_SOFTWARE`='" . $disk_registryHKLM_SOFTWARE . "',
	`disk_fileNamePresent`='" . $disk_fileNamePresent . "',
	`malware_memory_processCreated`='" . $malware_memory_processCreated . "',
	`malware_memory_processTerminated`='" . $malware_memory_processTerminated . "',
	`malware_disk_fileWrite`='" . $malware_disk_fileWrite . "',
	`malware_disk_fileDelete`='" . $malware_disk_fileDelete . "',
	`malware_disk_registrySetValueKey`='" . $malware_disk_registrySetValueKey . "',
	`malware_disk_registryDeleteValueKey`='" . $malware_disk_registryDeleteValueKey . "',
	`malware_disk_registryHKLM`='" . $malware_disk_registryHKLM . "',
	`malware_disk_registryHKCU`='" . $malware_disk_registryHKCU . "',
	`malware_disk_registryHKCR`='" . $malware_disk_registryHKCR . "',
	`malware_disk_registryHKU`='" . $malware_disk_registryHKU . "',
        `malware_disk_registryHKLM_SAM`='" . $malware_disk_registryHKLM_SAM . "',
	`malware_disk_registryHKLM_SECURITY`='" . $malware_disk_registryHKLM_SECURITY . "',
	`malware_disk_registryHKLM_SYSTEM`='" . $malware_disk_registryHKLM_SYSTEM . "',
	`malware_disk_registryHKLM_SOFTWARE`='" . $malware_disk_registryHKLM_SOFTWARE . "',
    	`network_fileSize`='" . $network_fileSize . "',
	`network_numPackets`='" . $network_numPackets . "',
	`network_dataSize`='" . $network_dataSize . "',
	`network_dataRate`='" . $network_dataRate . "',
	`network_avgPacketSize`='" . $network_avgPacketSize . "',
	`network_avgPacketRate`='" . $network_avgPacketRate . "',
	`network_uniqueProtocols`='" . $network_uniqueProtocols . "',
    	`network_uniquePacketSizes`='" . $network_uniquePacketSizes . "',
	`network_uniqueIPs`='" . $network_uniqueIPs . "',
	`network_udp`='" . $network_udp . "',
	`network_tcp`='" . $network_tcp . "',
	`network_icmp`='" . $network_icmp . "',
	`network_http`='" . $network_http . "',
	`network_httpGET`='" . $network_httpGET . "',
	`network_httpGETexe`='" . $network_httpGETexe . "',
	`network_httpGETtxt`='" . $network_httpGETtxt . "',
	`network_httpGETphp`='" . $network_httpGETphp . "',
	`network_httpGETjpg`='" . $network_httpGETjpg . "'
;";


            //Check whether it is possible to execute query
            if (mysql_query($query) === FALSE)
                echo "\n Impossible to execute INSERT/UPDATE query! File: " . $fileName;
        }
        echo "\n";
    }
    echo "\n";
?>
